"""Create users table

Revision ID: 729ee9ff6ad6
Revises: 
Create Date: 2025-08-14 13:54:37.685900

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '729ee9ff6ad6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###
    from passlib.hash import bcrypt
    from sqlalchemy.sql import table, column
    from sqlalchemy import String, Boolean, Integer

    users_table = table('users',
        column('id', Integer),
        column('username', String),
        column('email', String),
        column('password_hash', String),
        column('is_admin', Boolean)
    )

    op.bulk_insert(users_table,
        [
            {'id': 1, 'username': 'admin', 'email': 'admin@example.com', 'password_hash': bcrypt.hash('admin'), 'is_admin': True}
        ]
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
